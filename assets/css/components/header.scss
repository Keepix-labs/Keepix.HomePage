/* Header */

.header {
  --transition-fix: 0.5s;
  --padding: var(--content-padding);
  position: absolute;
  inset: var(--marge-primary) 0 auto;
  z-index: 1000;
  font-size: 0.95em;

  a:not(.btn):not(.header-logo) {
    transition: opacity var(--transition-link);

    &:hover {
      opacity: 0.5;
    }
  }

  &-wrapper {
    width: 100vw;
    display: flex;
    align-items: center;
    color: var(--txt-secondary);
    transition: color var(--transition-fix), transform var(--transition-fix),
      padding var(--transition-fix);
    inset: inherit;
    top: calc(var(--marge-primary) * -1);
    left: 50%;
    transform: translateX(-50%);
    padding-top: var(--marge-primary);

    &::before {
      content: "";
      position: absolute;
      background: linear-gradient(
        to bottom,
        var(--bg-primary),
        rgba(var(--bg-primary-rgb) / 80%)
      );
      backdrop-filter: blur(5px);
      height: 0;
      transition: height var(--transition-fix);
      border-radius: 0 0 var(--radius-primary) var(--radius-primary);
      width: 100vw;
      left: 50%;
      transform: translateX(-50%);
      top: 0;
    }
  }

  .content {
    transition: padding var(--transition-fix);
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: var(--padding);
    left: 0;

    @include max($breakpoint-xl) {
      max-width: 100%;
      width: 100%;
      padding: var(--padding) calc(var(--padding) + var(--marge-primary));
    }
  }

  &.fix {
    .header-wrapper {
      position: fixed;
      padding-top: var(--marge-primary);

      &::before {
        height: 100%;
      }

      .header-logo {
        &-sigle {
          width: 4em;
        }
      }

      .content {
        padding: calc(var(--padding) / 2) var(--padding);
      }
    }
  }

  &-logo {
    display: flex;
    align-items: center;

    &-sigle {
      transition: width var(--transition-fix);
      width: 5em;
      overflow: visible;
      stroke: currentColor;
      stroke-width: 1em;
      stroke-linejoin: round;
      stroke-miterlimit: 10;

      .white {
        transition: opacity var(--transition-fix);
      }
    }

    &-txt {
      height: 1.9em;
      margin-left: 1.25em;
      fill: currentColor;
    }

    &.hover {
      .header-logo-sigle {
        use {
          animation: hoveredLogo 0.7s var(--cubic);
        }
      }
    }

    @keyframes hoveredLogo {
      from {
        transform: translateY(0%);
      }
      50% {
        transform: translateY(-20%);
      }
      to {
        transform: translateY(0%);
      }
    }
  }

  &-right {
    display: flex;
    align-items: center;
    gap: 1.25em;

    .btn {
      padding: 0.8em 1.7em 0.85em;
      font-size: 0.95em;
    }
  }

  &-nav {
    margin-right: auto;
    font-weight: bold;
    font-size: 0.85em;
    margin-left: calc(var(--padding) * 2);
    padding-left: calc(var(--padding) * 2);

    @include min($breakpoint-large) {
      &::before {
        content: "";
        inset: 0;
        width: 1px;
        background-color: currentColor;
        position: absolute;
        opacity: 0.2;
      }
    }

    ul {
      display: flex;
      align-items: center;
      gap: 2.5em;
    }

    li div {
      cursor: pointer;
    }

    &-button {
      aspect-ratio: 1 / 1;
      background-color: var(--bg-body);
      border-radius: 50%;
      width: 3em;
      height: 3em;
      display: none;

      svg {
        width: 150%;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);

        path {
          fill: none;
          stroke: var(--txt-primary);
          stroke-linecap: round;
          stroke-linejoin: round;
          stroke-width: 2px;
          --length: 24;
          --offset: -38;
          stroke-dasharray: var(--length) var(--total-length);
          stroke-dashoffset: var(--offset);
          transition: stroke var(--transition-nav), stroke-dashoffset var(--transition-link), stroke-dasharray var(--transition-link);
        }

        .l-1, .l-3 {
          --total-length: 125;
        }
        
        .l-2 {
          --total-length: 70;
        }
      }

      &.open svg {
        .l-1, .l-3 {
          --length: 22;
          --offset: -92.5;
        }
        
        .l-2 {
          --length: 0;
          --offset: -50;
        }
      }
    }

    @include max($breakpoint-large) {
      position: absolute;
      transition: opacity var(--transition-nav), visibility var(--transition-nav);
      top: calc(100% - var(--marge-primary) / 2);
      right: var(--padding);
      border-radius: var(--radius-primary);
      background-color: rgba(0, 0, 0, .8);
      box-shadow: 0 0 50px rgba(250, 250, 250, .15) inset;
      backdrop-filter: blur(5px);
      padding: .65em 0;

      &:not(.open) {
        opacity: 0;
        visibility: hidden;
      }
      
      ul {
        flex-direction: column;
        font-size: calc(18px + 1 * (100vw - 320px) / 1080);
        gap: 0;
        width: 100%;
        margin-left: 0;
        align-items: stretch;

        li {
          flex: 1;
          padding: 0;

          & > * {
            width: 100%;
            display: block;
            padding: .65em 1.3em;
            text-align: right;
            padding-left: 2em;
          }
        }
      }

      &-button {
        display: flex;
      }
    }
  }

  &-social {
    display: flex;
    align-items: center;
    font-size: 1.5em;
    line-height: 1;
    gap: 0.75em;
  }

  &-lang {
    --gap: 0.2em;
    --size: calc(1em + var(--gap) * 2);
    line-height: 1;
    font-size: 1.5em;
    width: var(--size);
    height: var(--size);
    border-radius: var(--size);

    ul {
      transition: height 0.5s;
      display: flex;
      flex-direction: column;
      position: absolute;
      top: 0;
      width: 100%;
      overflow: hidden;
      height: var(--size);

      &:hover {
        height: calc(var(--size) * var(--n));
      }

      li {
        order: 1;
        width: var(--size);
        height: var(--size);

        &.selected {
          order: 0;
        }

        button {
          display: flex;
          align-items: center;
          justify-content: center;
          width: var(--size);
          height: var(--size);
        }
      }
    }
  }

  @include max($breakpoint-xxs) {
    &-lang,
    .header-logo-txt {
      display: none;
    }

    &-right {
      flex: 0;
    }
  }

  @include max($breakpoint-mobile) {
    .header-logo-txt,
    &-social {
      display: none;
    }
  }
}

body:not(.up):not(.openNav) .fix .header-wrapper.fixer {
  transform: translate(-50%, -100%);
}
